"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const core_1 = require("@storex/core");
class Subscribe extends React.Component {
    constructor() {
        super(...arguments);
        this.isUpdated = false;
        this.mounted = false;
        this.state = {
            dispatchers: undefined
        };
        this.update = state => {
            if (this.isUpdated) {
                return;
            }
            this.isUpdated = true;
            setTimeout(() => {
                if (this.mounted) {
                    this.setState({});
                    this.isUpdated = false;
                }
            }, 0);
        };
    }
    componentWillMount() {
        const { to } = this.props;
        let dis = to;
        if (!(to instanceof Array)) {
            dis = [to];
        }
        core_1.Dispatcher.register(this.update, dis);
        this.state.dispatchers = dis; // not updating by setState
    }
    componentWillUnmount() {
        this.mounted = false;
        const { dispatchers } = this.state;
        core_1.Dispatcher.unregister(this.update, dispatchers);
    }
    render() {
        this.mounted = true;
        const { children } = this.props;
        return children();
    }
}
exports.Subscribe = Subscribe;
//# sourceMappingURL=Subscribe.js.map