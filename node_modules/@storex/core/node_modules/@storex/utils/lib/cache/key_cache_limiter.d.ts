import { LinkedListNode, LinkedList } from "../structure";
import { Key } from "./types";
export declare class KeyCacheLimiter {
    limit_count: number;
    __node_map: Map<string | number, LinkedListNode<string | number>>;
    __ordered_keys: LinkedList<string | number>;
    __on_remove_func: Set<(key: string | number) => void>;
    constructor(limit_count?: number);
    private __emit_limited;
    onLimited(func: (key: Key) => void): void;
    unlistenOnLimited(func: (key: Key) => void): void;
    up(key: Key): void;
    limit(): void;
    remove(key: Key): void;
    clean(): void;
}
