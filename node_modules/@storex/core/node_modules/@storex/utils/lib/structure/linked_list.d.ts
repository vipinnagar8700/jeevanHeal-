export declare class LinkedListNode<T> {
    value: T;
    constructor(value: T);
    next: LinkedListNode<T> | null;
    previous: LinkedListNode<T> | null;
}
export declare class LinkedList<T = unknown> {
    head: LinkedListNode<T> | null;
    tall: LinkedListNode<T> | null;
    length: number;
    addValueToHead(value: T): LinkedListNode<T>;
    addToHead(newNode: LinkedListNode<T>): this;
    removeFromHead(): LinkedListNode<T> | null;
    addValueToTall(value: T): LinkedListNode<T>;
    addToTall(node: LinkedListNode<T>): this;
    removeFromTall(): LinkedListNode<T>;
    findByValue(val: T, compere?: (value1: T, value2: T) => boolean): LinkedListNode<T> | null;
    remove(node: LinkedListNode<T> | null): LinkedListNode<T> | null;
    removeValue(val: T): void;
}
