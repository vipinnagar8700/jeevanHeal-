"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class MultiEventsEmitter {
    constructor() {
        this.__funcs = new Map();
        this.__on = (key, func) => {
            if (!this.__funcs.has(key))
                this.__funcs.set(key, new Set());
            this.__funcs.get(key).add(func);
        };
        this.on = (key, func) => {
            if (typeof func !== "function")
                throw Error(`[EventEmitter::on] You must send a function. but received a ${func}`);
            singleOrMulti(key, this.__on, func);
        };
        this.__emit = (key, args) => {
            const funcs = this.__funcs.get(key);
            if (!funcs)
                return;
            for (const func of funcs)
                if (typeof func == "function")
                    func(args);
        };
        this.emit = (key, args) => {
            singleOrMulti(key, this.__emit, args);
        };
        this.__removeListener = (key, func) => {
            if (this.__funcs.has(key))
                this.__funcs.get(key).delete(func);
        };
        this.removeListener = (key, func) => {
            singleOrMulti(key, this.__removeListener, func);
        };
    }
}
exports.MultiEventsEmitter = MultiEventsEmitter;
function singleOrMulti(arg, func, ...args) {
    if (arg instanceof Array) {
        for (const a of arg)
            func(a, ...args);
    }
    else {
        func(arg, ...args);
    }
}
//# sourceMappingURL=multi-events-emitter.js.map