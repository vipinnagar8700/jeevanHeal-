import { css, setup } from 'goober';
import React, { useState, useEffect } from 'react';

/**
 * A minimal utility to combine classes
 *
 * @export
 * @param {(string[] | string)} obj
 * @returns {string}
 */
function cc() {
  for (var _len = arguments.length, obj = new Array(_len), _key = 0; _key < _len; _key++) {
    obj[_key] = arguments[_key];
  }

  return obj.join(" ");
}

var tagStyles = /*#__PURE__*/css({
  alignItems: "center",
  background: "var(--rti-tag)",
  borderRadius: "var(--rti-radius)",
  display: "inline-flex",
  justifyContent: "center",
  padding: "var(--rti-tag-padding)",
  button: {
    background: "none",
    border: 0,
    borderRadius: "50%",
    cursor: "pointer",
    lineHeight: "inherit",
    padding: "0 var(--rti-s)",
    "&:hover": {
      color: "var(--rti-tag-remove)"
    }
  }
});
function Tag(_ref) {
  var text = _ref.text,
      remove = _ref.remove,
      disabled = _ref.disabled;

  var handleOnRemove = function handleOnRemove(e) {
    e.stopPropagation();
    remove(text);
  };

  return React.createElement("span", {
    className: cc("rti--tag", tagStyles)
  }, React.createElement("span", null, text), !disabled && React.createElement("button", {
    type: "button",
    onClick: handleOnRemove,
    "aria-label": "remove " + text
  }, "\u2715"));
}

setup(React.createElement);
var RTIContainer = /*#__PURE__*/css({
  "--rti-bg": "#fff",
  "--rti-border": "#ccc",
  "--rti-main": "#3182ce",
  "--rti-radius": "0.375rem",
  "--rti-s": "0.5rem",
  "--rti-tag": "#edf2f7",
  "--rti-tag-remove": "#e53e3e",
  "--rti-tag-padding": "0.15rem 0.25rem",
  "*": {
    boxSizing: "border-box",
    transition: "all 0.2s ease"
  },
  alignItems: "center",
  bg: "var(--rti-bg)",
  border: "1px solid var(--rti-border)",
  borderRadius: "var(--rti-radius)",
  display: "flex",
  flexWrap: "wrap",
  gap: "var(--rti-s)",
  lineHeight: 1.4,
  padding: "var(--rti-s)",
  "&:focus-within": {
    borderColor: "var(--rti-main)",
    boxShadow: "var(--rti-main) 0px 0px 0px 1px"
  }
});
var RTIInput = /*#__PURE__*/css({
  border: 0,
  outline: 0,
  fontSize: "inherit",
  lineHeight: "inherit",
  width: "50%"
});
var defaultSeprators = ["Enter"];
var TagsInput = function TagsInput(_ref) {
  var name = _ref.name,
      placeHolder = _ref.placeHolder,
      value = _ref.value,
      onChange = _ref.onChange,
      onBlur = _ref.onBlur,
      seprators = _ref.seprators,
      onExisting = _ref.onExisting,
      onRemoved = _ref.onRemoved,
      disabled = _ref.disabled,
      isEditOnRemove = _ref.isEditOnRemove,
      beforeAddValidate = _ref.beforeAddValidate;

  var _useState = useState(value || []),
      tags = _useState[0],
      setTags = _useState[1];

  useEffect(function () {
    onChange && onChange(tags);
  }, [tags]);

  var handleOnKeyUp = function handleOnKeyUp(e) {
    e.stopPropagation();
    var text = e.target.value;

    if (e.key === "Backspace" && tags.length && !text) {
      e.target.value = isEditOnRemove ? tags.at(-1) + " " : "";
      setTags([].concat(tags.slice(0, -1)));
    }

    if (text && (seprators || defaultSeprators).includes(e.key)) {
      if (beforeAddValidate && !beforeAddValidate(text, tags)) return;

      if (tags.includes(text)) {
        onExisting && onExisting(text);
        return;
      }

      setTags([].concat(tags, [text]));
      e.target.value = "";
      e.preventDefault();
    }
  };

  var onTagRemove = function onTagRemove(text) {
    setTags(tags.filter(function (tag) {
      return tag !== text;
    }));
    onRemoved && onRemoved(text);
  };

  return React.createElement("div", {
    "aria-labelledby": name,
    className: cc("rti--container", RTIContainer)
  }, tags.map(function (tag) {
    return React.createElement(Tag, {
      key: tag,
      text: tag,
      remove: onTagRemove,
      disabled: disabled
    });
  }), React.createElement("input", {
    className: cc("rti--input", RTIInput),
    type: "text",
    name: name,
    placeholder: placeHolder,
    onKeyDown: handleOnKeyUp,
    onBlur: onBlur,
    disabled: disabled
  }));
};

export { TagsInput };
//# sourceMappingURL=react-tag-input-component.esm.js.map
